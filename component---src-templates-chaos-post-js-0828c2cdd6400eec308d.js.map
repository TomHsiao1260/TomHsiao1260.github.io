{"version":3,"sources":["webpack:///./src/components/video.js","webpack:///./src/templates/chaos-post.js"],"names":["Video","videoSrcURL","videoTitle","className","src","title","allow","frameBorder","webkitallowfullscreen","mozallowfullscreen","allowFullScreen","style","position","top","left","width","height","post","data","markdownRemark","front","frontmatter","SEO","desc","description","banner","img1","childImageSharp","fluid","pathname","fields","slug","article","node","parent","styles","container","img","img2","content","content1","film","content2","img3","img4","content3","img5","fontSize","to","query"],"mappings":"qOACA,IAoBeA,EApBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,Y,2HAAhB,wCACZ,yBAAKC,UAAU,SACb,4BACEC,IAAKH,EACLI,MAAOH,EACPI,MAAM,0EACNC,YAAY,IACZC,sBAAsB,OACtBC,mBAAmB,OACnBC,iBAAe,EACfC,MAAO,CACLC,SAAS,WACTC,IAAI,EACJC,KAAK,EACLC,MAAM,OACNC,OAAO,Y,YChBf,sCAQe,sBAAe,IACtBC,EADqB,EAAXC,KACEC,eACZC,EAAQH,EAAKI,YACnB,OACE,kBAAC,IAAD,KACE,kBAACC,EAAA,EAAD,CACEjB,MAAOe,EAAMf,MACbkB,KAAMH,EAAMI,YACZC,OAAQL,EAAMM,KAAKC,gBAAgBC,MAAMxB,IACzCyB,SAAUZ,EAAKa,OAAOC,KACtBC,SAAO,EACPC,KAAMhB,EAAKiB,SAEb,wBAAI/B,UAAWgC,IAAO9B,OAAQe,EAAMf,OACpC,wBAAIF,UAAWgC,IAAOX,aAAcJ,EAAMI,aAC1C,yBAAKrB,UAAWgC,IAAOC,WACrB,kBAAC,IAAD,CAAKjC,UAAWgC,IAAOE,IAAKT,MAAOR,EAAMM,KAAKC,gBAAgBC,QAC9D,kBAAC,IAAD,CAAKzB,UAAWgC,IAAOE,IAAKT,MAAOR,EAAMkB,KAAKX,gBAAgBC,SAEhE,yBAAKzB,UAAWgC,IAAOI,SAAUnB,EAAMoB,UACvC,yBAAKrC,UAAWgC,IAAOM,MACrB,kBAAC,EAAD,CACExC,YAAamB,EAAMnB,YACnBC,WAAYkB,EAAMlB,cAGtB,yBAAKC,UAAWgC,IAAOI,SAAUnB,EAAMsB,UACvC,yBAAKvC,UAAWgC,IAAOC,WACrB,kBAAC,IAAD,CAAKjC,UAAWgC,IAAOE,IAAKT,MAAOR,EAAMuB,KAAKhB,gBAAgBC,QAC9D,kBAAC,IAAD,CAAKzB,UAAWgC,IAAOE,IAAKT,MAAOR,EAAMwB,KAAKjB,gBAAgBC,SAEhE,yBAAKzB,UAAWgC,IAAOI,SAAUnB,EAAMyB,UACvC,yBAAK1C,UAAWgC,IAAOC,WACrB,kBAAC,IAAD,CAAKjC,UAAWgC,IAAOE,IAAKT,MAAOR,EAAM0B,KAAKnB,gBAAgBC,QAC9D,kBAAC,IAAD,CAAKzB,UAAWgC,IAAOE,IAAKT,MAAOR,EAAMkB,KAAKX,gBAAgBC,SAEhE,6BAAK,6BAAK,6BAAK,6BACf,kBAAC,OAAD,CAAMjB,MAAO,CAAEoC,SAAS,QAAWC,GAAG,YAAtC,WACA,6BAAK,6BAAK,6BAAK,+BAtCN,IA2CFC,EAAK","file":"component---src-templates-chaos-post-js-0828c2cdd6400eec308d.js","sourcesContent":["import React from \"react\"\nconst Video = ({ videoSrcURL, videoTitle, ...props }) => (\n  <div className=\"video\">\n    <iframe\n      src={videoSrcURL}\n      title={videoTitle}\n      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      frameBorder=\"0\"\n      webkitallowfullscreen=\"true\"\n      mozallowfullscreen=\"true\"\n      allowFullScreen\n      style={{\n        position:`absolute`,\n        top:0,\n        left:0,\n        width:`100%`,\n        height:`100%`\n      }}\n    />\n  </div>\n)\nexport default Video","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport styles from \"./chaos-post.module.css\"\nimport Img from \"gatsby-image\"\nimport Video from \"../components/video\"\nimport SEO from '../components/SEO/SEO'\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n  const front = post.frontmatter\n  return (\n    <Layout>\n      <SEO \n        title={front.title}\n        desc={front.description}\n        banner={front.img1.childImageSharp.fluid.src}\n        pathname={post.fields.slug}\n        article\n        node={post.parent}\n      />\n      <h1 className={styles.title}>{front.title}</h1>\n      <h1 className={styles.description}>{front.description}</h1>\n      <div className={styles.container}>\n        <Img className={styles.img} fluid={front.img1.childImageSharp.fluid} />\n        <Img className={styles.img} fluid={front.img2.childImageSharp.fluid} />\n      </div>\n      <div className={styles.content}>{front.content1}</div>\n      <div className={styles.film}>\n        <Video\n          videoSrcURL={front.videoSrcURL}\n          videoTitle={front.videoTitle}\n        />\n      </div>\n      <div className={styles.content}>{front.content2}</div>\n      <div className={styles.container}>\n        <Img className={styles.img} fluid={front.img3.childImageSharp.fluid} />\n        <Img className={styles.img} fluid={front.img4.childImageSharp.fluid} />\n      </div>\n      <div className={styles.content}>{front.content3}</div>\n      <div className={styles.container}>\n        <Img className={styles.img} fluid={front.img5.childImageSharp.fluid} />\n        <Img className={styles.img} fluid={front.img2.childImageSharp.fluid} />\n      </div>\n      <br/><br/><br/><br/>\n      <Link style={{ fontSize: `20px` }} to='/science'>>> Back</Link>\n      <br/><br/><br/><br/>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      excerpt\n      html\n      frontmatter {\n        title\n        description\n        content1\n        content2\n        content3\n        videoSrcURL\n        videoTitle\n        img1 {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        img2 {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        img3 {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        img4 {\n          childImageSharp {\n            fluid(maxWidth: 500) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        img5 {\n            childImageSharp {\n              fluid(maxWidth: 500) {\n                ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n      fields {\n        slug\n      }\n      parent {\n        ... on File {\n          birthTime(fromNow: false)\n          modifiedTime(fromNow: false)\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}